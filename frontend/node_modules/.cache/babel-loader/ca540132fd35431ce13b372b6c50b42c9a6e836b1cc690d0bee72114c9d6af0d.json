{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-CHAT-APP\\\\frontend\\\\src\\\\components\\\\Authentication\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import { FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, Button } from '@chakra-ui/react';\n// import React, { useState } from 'react'\n// import { useToast } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\n// const Signup = () => {\n//     const [show, setShow] = useState(false);\n//     const [name, setName] = useState();\n//     const [email, setEmail] = useState();\n//     const [confirmpassword, setConfirmPassword] = useState();\n//     const [password, setPassword] = useState();\n//     const [pic, setPic] = useState();\n//     const [loading, setLoading] = useState(false)\n//     const toast = useToast();\n//     const history = useHistory();\n\n//     const handleClick = () => setShow(!show);\n\n//     const postDetails = (pics) => {\n//       setLoading(true);\n//       if (pics === undefined) {\n//         toast({\n//           title: \"Please Select an Image!\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\", \n//         });\n//         return;\n//       }\nconsole;\n\n//       if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n//         const data = new FormData();\n//         data.append(\"file\", pics);\n//         data.append(\"upload_preset\", \"dosthi-chat\");\n//         data.append(\"cloud_name\", \"dosthi-chat\");\n//         fetch(\"https://api.cloudinary.com/v1_1/dosthi-chat\", {\n//           method: \"post\",\n//           body: data,\n//         }).then((res) => res.json())\n//         .then((data) => {\n//           setPic(data.url.toString());\n//           console.log(data.url.toString());\n//           setLoading(false);\n//           })\n//           .catch((err) => {\n//             console.log(err);\n//             setLoading(false);\n//           });\n//       } else {\n//          toast({\n//            title: \"Please Select an Image!\",\n//            status: \"warning\",\n//            duration: 5000,\n//            isClosable: true,\n//            position: \"bottom\",\n//          });\n//          setLoading(false);\n//          return;\n\n//       }\n//     };\n\n//     const submitHandler = async () => {\n//       setLoading(true);\n//       if (!name || !email || !password || !confirmpassword){\n//         toast({\n//           title: \"Please Fill all the Feilds\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         setLoading(false);\n//         return;\n//       }\n//       if (password !== confirmpassword) {\n//       toast({\n//           title: \"Password Do Not Match\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         return;\n//       }\n\n//       try {\n//         const config = {\n//           headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n//       const { data } = await axios.post(\"/api/user\",{name,email,password,pic},\n//       config\n//       );\n//       toast({\n//           title: \"Registration Successful\",\n//           status: \"success\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n\n//         localStorage.setItem(\"userInfo\". JSON.stringify(data));\n\n//         setLoading(false);\n//         history.push('/chats')\n//       } catch (error) {\n//        toast({\n//           title: \"Error Occured\",\n//           status: \"error\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         }); \n//         setLoading(false);\n//       }\n//     };\n\n//   return (\n//     <VStack spacing=\"5px\" color=\"black\">\n//       <FormControl id=\"first-name\" isRequired>\n//         <FormLabel>Name</FormLabel>\n//         <Input\n//           placeholder=\"Enter Your Name\"\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//       </FormControl>\n//       <FormControl id=\"Email\" isRequired>\n//         <FormLabel>Email</FormLabel>\n//         <Input\n//           placeholder=\"Enter Your Email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//       </FormControl>\n//       <FormControl id=\"Password\" isRequired>\n//         <FormLabel>Password</FormLabel>\n//         <InputGroup>\n//           <Input\n//             type={show? \"text\" : \"password\"}\n//             placeholder=\"Enter Your Password\"\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <InputRightElement width='4.5rem'>\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\n//                 {show ? \"Hide\" : \"Show\"}\n//                 </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//       </FormControl>\n//       <FormControl id=\"Password\" isRequired>\n//         <FormLabel>Confirm Password</FormLabel>\n//         <InputGroup size=\"md\">\n//           <Input\n//             type={show? \"text\" : \"password\"}\n//             placeholder=\"Confirm Password\"\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//           <InputRightElement width='4.5rem'>\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\n//                 {show ? \"Hide\" : \"Show\"}\n//                 </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//       </FormControl>\n//       <FormControl id=\"Pic\" >\n//         <FormLabel>Upload Your Picture</FormLabel>\n//         <input \n//         type=\"file\"\n//         onPlay={1.5}\n//         accept='image/*'\n//         onChange={(e)=> postDetails(e.target.files[0])}\n//         />\n//       </FormControl>\n\n//       <Button\n//       colorScheme='blue'\n//       width='100%'\n//       style={{marginTop: 15 }}\n//       onClick={submitHandler}\n//       isLoading={loading}\n//       >\n//         Sign Up\n//       </Button>\n//     </VStack>\n//   );\n// };\n\n// export default Signup\n\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user\", {\n        name,\n        email,\n        password,\n        pic\n      }, config);\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n    }\n  };\n  const postDetails = pics => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"piyushproj\");\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(data.url.toString());\n        setPicLoading(false);\n      }).catch(err => {\n        console.log(err);\n        setPicLoading(false);\n      });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5px\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"first-name\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"email\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Enter Your Email Address\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"password\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        size: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Enter Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"password\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        size: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Confirm password\",\n          onChange: e => setConfirmpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"pic\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Upload your Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        p: 1.5,\n        accept: \"image/*\",\n        onChange: e => postDetails(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      width: \"100%\",\n      style: {\n        marginTop: 15\n      },\n      onClick: submitHandler,\n      isLoading: picLoading,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"itQrzMZ7BsGgAjk9By+JZCwhNY4=\", false, function () {\n  return [useToast, useHistory];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["console","Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","VStack","useToast","axios","useState","useHistory","jsxDEV","_jsxDEV","Signup","_s","show","setShow","handleClick","toast","history","name","setName","email","setEmail","confirmpassword","setConfirmpassword","password","setPassword","pic","setPic","picLoading","setPicLoading","submitHandler","title","status","duration","isClosable","position","log","config","headers","data","post","localStorage","setItem","JSON","stringify","push","error","description","response","message","postDetails","pics","undefined","type","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","spacing","children","id","isRequired","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","size","width","h","onClick","p","accept","files","colorScheme","style","marginTop","isLoading","_c","$RefreshReg$"],"sources":["E:/MERN-CHAT-APP/frontend/src/components/Authentication/Signup.js"],"sourcesContent":["// import { FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, Button } from '@chakra-ui/react';\r\n// import React, { useState } from 'react'\r\n// import { useToast } from \"@chakra-ui/react\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n// const Signup = () => {\r\n//     const [show, setShow] = useState(false);\r\n//     const [name, setName] = useState();\r\n//     const [email, setEmail] = useState();\r\n//     const [confirmpassword, setConfirmPassword] = useState();\r\n//     const [password, setPassword] = useState();\r\n//     const [pic, setPic] = useState();\r\n//     const [loading, setLoading] = useState(false)\r\n//     const toast = useToast();\r\n//     const history = useHistory();\r\n\r\n\r\n\r\n//     const handleClick = () => setShow(!show);\r\n\r\n//     const postDetails = (pics) => {\r\n//       setLoading(true);\r\n//       if (pics === undefined) {\r\n//         toast({\r\n//           title: \"Please Select an Image!\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\", \r\n//         });\r\n//         return;\r\n//       }\r\nconsole\r\n\r\n//       if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n//         const data = new FormData();\r\n//         data.append(\"file\", pics);\r\n//         data.append(\"upload_preset\", \"dosthi-chat\");\r\n//         data.append(\"cloud_name\", \"dosthi-chat\");\r\n//         fetch(\"https://api.cloudinary.com/v1_1/dosthi-chat\", {\r\n//           method: \"post\",\r\n//           body: data,\r\n//         }).then((res) => res.json())\r\n//         .then((data) => {\r\n//           setPic(data.url.toString());\r\n//           console.log(data.url.toString());\r\n//           setLoading(false);\r\n//           })\r\n//           .catch((err) => {\r\n//             console.log(err);\r\n//             setLoading(false);\r\n//           });\r\n//       } else {\r\n//          toast({\r\n//            title: \"Please Select an Image!\",\r\n//            status: \"warning\",\r\n//            duration: 5000,\r\n//            isClosable: true,\r\n//            position: \"bottom\",\r\n//          });\r\n//          setLoading(false);\r\n//          return;\r\n\r\n//       }\r\n//     };\r\n\r\n\r\n//     const submitHandler = async () => {\r\n//       setLoading(true);\r\n//       if (!name || !email || !password || !confirmpassword){\r\n//         toast({\r\n//           title: \"Please Fill all the Feilds\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n//       if (password !== confirmpassword) {\r\n//       toast({\r\n//           title: \"Password Do Not Match\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const config = {\r\n//           headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n//       const { data } = await axios.post(\"/api/user\",{name,email,password,pic},\r\n//       config\r\n//       );\r\n//       toast({\r\n//           title: \"Registration Successful\",\r\n//           status: \"success\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n\r\n//         localStorage.setItem(\"userInfo\". JSON.stringify(data));\r\n\r\n//         setLoading(false);\r\n//         history.push('/chats')\r\n//       } catch (error) {\r\n//        toast({\r\n//           title: \"Error Occured\",\r\n//           status: \"error\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         }); \r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n    \r\n//   return (\r\n//     <VStack spacing=\"5px\" color=\"black\">\r\n//       <FormControl id=\"first-name\" isRequired>\r\n//         <FormLabel>Name</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Your Name\"\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n//       </FormControl>\r\n//       <FormControl id=\"Email\" isRequired>\r\n//         <FormLabel>Email</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Your Email\"\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//         />\r\n//       </FormControl>\r\n//       <FormControl id=\"Password\" isRequired>\r\n//         <FormLabel>Password</FormLabel>\r\n//         <InputGroup>\r\n//           <Input\r\n//             type={show? \"text\" : \"password\"}\r\n//             placeholder=\"Enter Your Password\"\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//           <InputRightElement width='4.5rem'>\r\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n//                 {show ? \"Hide\" : \"Show\"}\r\n//                 </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//       </FormControl>\r\n//       <FormControl id=\"Password\" isRequired>\r\n//         <FormLabel>Confirm Password</FormLabel>\r\n//         <InputGroup size=\"md\">\r\n//           <Input\r\n//             type={show? \"text\" : \"password\"}\r\n//             placeholder=\"Confirm Password\"\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//           <InputRightElement width='4.5rem'>\r\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n//                 {show ? \"Hide\" : \"Show\"}\r\n//                 </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//       </FormControl>\r\n//       <FormControl id=\"Pic\" >\r\n//         <FormLabel>Upload Your Picture</FormLabel>\r\n//         <input \r\n//         type=\"file\"\r\n//         onPlay={1.5}\r\n//         accept='image/*'\r\n//         onChange={(e)=> postDetails(e.target.files[0])}\r\n//         />\r\n//       </FormControl>\r\n      \r\n//       <Button\r\n//       colorScheme='blue'\r\n//       width='100%'\r\n//       style={{marginTop: 15 }}\r\n//       onClick={submitHandler}\r\n//       isLoading={loading}\r\n//       >\r\n//         Sign Up\r\n//       </Button>\r\n//     </VStack>\r\n//   );\r\n// };\r\n\r\n// export default Signup\r\n\r\n\r\n\r\n\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,WAAW,EAAEC,SAAS,QAAQ,yBAAyB;AAChE,SAASC,KAAK,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,kBAAkB;AACvE,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}