{"ast":null,"code":"// import { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, useToast } from '@chakra-ui/react';\n// import React, { useState } from 'react'\n\n// import axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\n\n// const Login = () => {\n//   const [show, setShow] = useState(false);\n//     const [email, setEmail] = useState();\n//     const [password, setPassword] = useState();\n//     const [loading, setLoading] = useState(false);\n//     const toast = useToast();\n//     const history = useHistory();\n\n//     const handleClick = () => setShow(!show);\n//     const submitHandler = async () => {\n//       setLoading(true);\n//       if (!email || !password) {\n//         toast({\n//           title: \"Please Fill all the Feilds\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         setLoading(false);\n//         return;\n//       }\n//       try {\n//         const config = {\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//           },\n//         };\n//         const { data } = await axios.post(\n//           \"/api/user/login\",\n//           { email, password },\n//           config\n//         );\n\n//         toast({\n//           title: \"Login Successful\",\n//           status: \"success\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//         setLoading(false);\n//         history.push(\"/chats\");\n//       } catch (error) {\n//         toast({\n//           title: \"Error Occured\",\n//           description: error.response.data.message,\n//           status: \"error\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         setLoading(false);\n//       }\n//     };\n\n//   return (\n//     <VStack spacing=\"5px\" color=\"black\">\n\n//       <FormControl id=\"Email\" isRequired>\n//         <FormLabel>Email</FormLabel>\n//         <Input\n//           value={email}\n//           placeholder=\"Enter Your Email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//       </FormControl>\n//       <FormControl id=\"Password\" isRequired>\n//         <FormLabel>Password</FormLabel>\n//         <InputGroup>\n//           <Input\n//             type={show? \"text\" : \"password\"}\n//             placeholder=\"Enter Your Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <InputRightElement width='4.5rem'>\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\n//                 {show ? \"Hide\" : \"Show\"}\n//                 </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//       </FormControl>\n\n//       <Button\n//       colorScheme='blue'\n//       width='100%'\n//       style={{marginTop: 15 }}\n//       onClick={submitHandler}\n//       isLoading={loading}\n//       >\n//         Login\n//       </Button> \n//       <Button\n//       variant=\"solid\"\n//       colorScheme='red'\n//       width=\"100%\"\n//       marginTop='10px'\n//       onClick={() => {\n//         setEmail(\"guest@example.com\");\n//         setPassword(\"123456\");\n//         }}\n//       >\n//         Get Guest User Credentials\n//       </Button>\n//     </VStack>\n//   );\n//       }\n\n// export default Login","map":{"version":3,"names":[],"sources":["E:/MERN-CHAT-APP/frontend/src/components/Authentication/Login.js"],"sourcesContent":["// import { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, useToast } from '@chakra-ui/react';\r\n// import React, { useState } from 'react'\r\n\r\n// import axios from \"axios\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\n// const Login = () => {\r\n//   const [show, setShow] = useState(false);\r\n//     const [email, setEmail] = useState();\r\n//     const [password, setPassword] = useState();\r\n//     const [loading, setLoading] = useState(false);\r\n//     const toast = useToast();\r\n//     const history = useHistory();\r\n\r\n//     const handleClick = () => setShow(!show);\r\n//     const submitHandler = async () => {\r\n//       setLoading(true);\r\n//       if (!email || !password) {\r\n//         toast({\r\n//           title: \"Please Fill all the Feilds\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n//       try {\r\n//         const config = {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/json\",\r\n//           },\r\n//         };\r\n//         const { data } = await axios.post(\r\n//           \"/api/user/login\",\r\n//           { email, password },\r\n//           config\r\n//         );\r\n\r\n//         toast({\r\n//           title: \"Login Successful\",\r\n//           status: \"success\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n//         setLoading(false);\r\n//         history.push(\"/chats\");\r\n//       } catch (error) {\r\n//         toast({\r\n//           title: \"Error Occured\",\r\n//           description: error.response.data.message,\r\n//           status: \"error\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n    \r\n//   return (\r\n//     <VStack spacing=\"5px\" color=\"black\">\r\n     \r\n//       <FormControl id=\"Email\" isRequired>\r\n//         <FormLabel>Email</FormLabel>\r\n//         <Input\r\n//           value={email}\r\n//           placeholder=\"Enter Your Email\"\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//         />\r\n//       </FormControl>\r\n//       <FormControl id=\"Password\" isRequired>\r\n//         <FormLabel>Password</FormLabel>\r\n//         <InputGroup>\r\n//           <Input\r\n//             type={show? \"text\" : \"password\"}\r\n//             placeholder=\"Enter Your Password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//           <InputRightElement width='4.5rem'>\r\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n//                 {show ? \"Hide\" : \"Show\"}\r\n//                 </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//       </FormControl>\r\n      \r\n//       <Button\r\n//       colorScheme='blue'\r\n//       width='100%'\r\n//       style={{marginTop: 15 }}\r\n//       onClick={submitHandler}\r\n//       isLoading={loading}\r\n//       >\r\n//         Login\r\n//       </Button> \r\n//       <Button\r\n//       variant=\"solid\"\r\n//       colorScheme='red'\r\n//       width=\"100%\"\r\n//       marginTop='10px'\r\n//       onClick={() => {\r\n//         setEmail(\"guest@example.com\");\r\n//         setPassword(\"123456\");\r\n//         }}\r\n//       >\r\n//         Get Guest User Credentials\r\n//       </Button>\r\n//     </VStack>\r\n//   );\r\n//       }\r\n\r\n// export default Login\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}