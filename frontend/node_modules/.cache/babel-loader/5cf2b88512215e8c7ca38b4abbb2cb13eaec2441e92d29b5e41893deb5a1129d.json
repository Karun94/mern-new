{"ast":null,"code":"// import { FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, Button } from '@chakra-ui/react';\n// import React, { useState } from 'react'\n// import { useToast } from \"@chakra-ui/react\";\n// import axios from \"axios\";\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\n// const Signup = () => {\n//     const [show, setShow] = useState(false);\n//     const [name, setName] = useState();\n//     const [email, setEmail] = useState();\n//     const [confirmpassword, setConfirmPassword] = useState();\n//     const [password, setPassword] = useState();\n//     const [pic, setPic] = useState();\n//     const [loading, setLoading] = useState(false)\n//     const toast = useToast();\n//     const history = useHistory();\n\n//     const handleClick = () => setShow(!show);\n\n//     const postDetails = (pics) => {\n//       setLoading(true);\n//       if (pics === undefined) {\n//         toast({\n//           title: \"Please Select an Image!\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\", \n//         });\n//         return;\n//       }\n\n//       if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n//         const data = new FormData();\n//         data.append(\"file\", pics);\n//         data.append(\"upload_preset\", \"dosthi-chat\");\n//         data.append(\"cloud_name\", \"dosthi-chat\");\n//         fetch(\"https://api.cloudinary.com/v1_1/dosthi-chat\", {\n//           method: \"post\",\n//           body: data,\n//         }).then((res) => res.json())\n//         .then((data) => {\n//           setPic(data.url.toString());\n//           console.log(data.url.toString());\n//           setLoading(false);\n//           })\n//           .catch((err) => {\n//             console.log(err);\n//             setLoading(false);\n//           });\n//       } else {\n//          toast({\n//            title: \"Please Select an Image!\",\n//            status: \"warning\",\n//            duration: 5000,\n//            isClosable: true,\n//            position: \"bottom\",\n//          });\n//          setLoading(false);\n//          return;\n\n//       }\n//     };\n\n//     const submitHandler = async () => {\n//       setLoading(true);\n//       if (!name || !email || !password || !confirmpassword){\n//         toast({\n//           title: \"Please Fill all the Feilds\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         setLoading(false);\n//         return;\n//       }\n//       if (password !== confirmpassword) {\n//       toast({\n//           title: \"Password Do Not Match\",\n//           status: \"warning\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n//         return;\n//       }\n\n//       try {\n//         const config = {\n//           headers: {\n//           \"Content-type\": \"application/json\",\n//         },\n//       };\n//       const { data } = await axios.post(\"/api/user\",{name,email,password,pic},\n//       config\n//       );\n//       toast({\n//           title: \"Registration Successful\",\n//           status: \"success\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         });\n\n//         localStorage.setItem(\"userInfo\". JSON.stringify(data));\n\n//         setLoading(false);\n//         history.push('/chats')\n//       } catch (error) {\n//        toast({\n//           title: \"Error Occured\",\n//           status: \"error\",\n//           duration: 5000,\n//           isClosable: true,\n//           position: \"bottom\",\n//         }); \n//         setLoading(false);\n//       }\n//     };\n\n//   return (\n//     <VStack spacing=\"5px\" color=\"black\">\n//       <FormControl id=\"first-name\" isRequired>\n//         <FormLabel>Name</FormLabel>\n//         <Input\n//           placeholder=\"Enter Your Name\"\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//       </FormControl>\n//       <FormControl id=\"Email\" isRequired>\n//         <FormLabel>Email</FormLabel>\n//         <Input\n//           placeholder=\"Enter Your Email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//       </FormControl>\n//       <FormControl id=\"Password\" isRequired>\n//         <FormLabel>Password</FormLabel>\n//         <InputGroup>\n//           <Input\n//             type={show? \"text\" : \"password\"}\n//             placeholder=\"Enter Your Password\"\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           <InputRightElement width='4.5rem'>\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\n//                 {show ? \"Hide\" : \"Show\"}\n//                 </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//       </FormControl>\n//       <FormControl id=\"Password\" isRequired>\n//         <FormLabel>Confirm Password</FormLabel>\n//         <InputGroup size=\"md\">\n//           <Input\n//             type={show? \"text\" : \"password\"}\n//             placeholder=\"Confirm Password\"\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//           <InputRightElement width='4.5rem'>\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\n//                 {show ? \"Hide\" : \"Show\"}\n//                 </Button>\n//           </InputRightElement>\n//         </InputGroup>\n//       </FormControl>\n//       <FormControl id=\"Pic\" >\n//         <FormLabel>Upload Your Picture</FormLabel>\n//         <input \n//         type=\"file\"\n//         onPlay={1.5}\n//         accept='image/*'\n//         onChange={(e)=> postDetails(e.target.files[0])}\n//         />\n//       </FormControl>\n\n//       <Button\n//       colorScheme='blue'\n//       width='100%'\n//       style={{marginTop: 15 }}\n//       onClick={submitHandler}\n//       isLoading={loading}\n//       >\n//         Sign Up\n//       </Button>\n//     </VStack>\n//   );\n// };\n\n// export default Signup","map":{"version":3,"names":[],"sources":["E:/MERN-CHAT-APP/frontend/src/components/Authentication/Signup.js"],"sourcesContent":["// import { FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack, Button } from '@chakra-ui/react';\r\n// import React, { useState } from 'react'\r\n// import { useToast } from \"@chakra-ui/react\";\r\n// import axios from \"axios\";\r\n// import { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\n// const Signup = () => {\r\n//     const [show, setShow] = useState(false);\r\n//     const [name, setName] = useState();\r\n//     const [email, setEmail] = useState();\r\n//     const [confirmpassword, setConfirmPassword] = useState();\r\n//     const [password, setPassword] = useState();\r\n//     const [pic, setPic] = useState();\r\n//     const [loading, setLoading] = useState(false)\r\n//     const toast = useToast();\r\n//     const history = useHistory();\r\n\r\n\r\n\r\n//     const handleClick = () => setShow(!show);\r\n\r\n//     const postDetails = (pics) => {\r\n//       setLoading(true);\r\n//       if (pics === undefined) {\r\n//         toast({\r\n//           title: \"Please Select an Image!\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\", \r\n//         });\r\n//         return;\r\n//       }\r\n\r\n//       if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n//         const data = new FormData();\r\n//         data.append(\"file\", pics);\r\n//         data.append(\"upload_preset\", \"dosthi-chat\");\r\n//         data.append(\"cloud_name\", \"dosthi-chat\");\r\n//         fetch(\"https://api.cloudinary.com/v1_1/dosthi-chat\", {\r\n//           method: \"post\",\r\n//           body: data,\r\n//         }).then((res) => res.json())\r\n//         .then((data) => {\r\n//           setPic(data.url.toString());\r\n//           console.log(data.url.toString());\r\n//           setLoading(false);\r\n//           })\r\n//           .catch((err) => {\r\n//             console.log(err);\r\n//             setLoading(false);\r\n//           });\r\n//       } else {\r\n//          toast({\r\n//            title: \"Please Select an Image!\",\r\n//            status: \"warning\",\r\n//            duration: 5000,\r\n//            isClosable: true,\r\n//            position: \"bottom\",\r\n//          });\r\n//          setLoading(false);\r\n//          return;\r\n\r\n//       }\r\n//     };\r\n\r\n\r\n//     const submitHandler = async () => {\r\n//       setLoading(true);\r\n//       if (!name || !email || !password || !confirmpassword){\r\n//         toast({\r\n//           title: \"Please Fill all the Feilds\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n//       if (password !== confirmpassword) {\r\n//       toast({\r\n//           title: \"Password Do Not Match\",\r\n//           status: \"warning\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const config = {\r\n//           headers: {\r\n//           \"Content-type\": \"application/json\",\r\n//         },\r\n//       };\r\n//       const { data } = await axios.post(\"/api/user\",{name,email,password,pic},\r\n//       config\r\n//       );\r\n//       toast({\r\n//           title: \"Registration Successful\",\r\n//           status: \"success\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         });\r\n\r\n//         localStorage.setItem(\"userInfo\". JSON.stringify(data));\r\n\r\n//         setLoading(false);\r\n//         history.push('/chats')\r\n//       } catch (error) {\r\n//        toast({\r\n//           title: \"Error Occured\",\r\n//           status: \"error\",\r\n//           duration: 5000,\r\n//           isClosable: true,\r\n//           position: \"bottom\",\r\n//         }); \r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n    \r\n//   return (\r\n//     <VStack spacing=\"5px\" color=\"black\">\r\n//       <FormControl id=\"first-name\" isRequired>\r\n//         <FormLabel>Name</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Your Name\"\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n//       </FormControl>\r\n//       <FormControl id=\"Email\" isRequired>\r\n//         <FormLabel>Email</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Your Email\"\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//         />\r\n//       </FormControl>\r\n//       <FormControl id=\"Password\" isRequired>\r\n//         <FormLabel>Password</FormLabel>\r\n//         <InputGroup>\r\n//           <Input\r\n//             type={show? \"text\" : \"password\"}\r\n//             placeholder=\"Enter Your Password\"\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//           <InputRightElement width='4.5rem'>\r\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n//                 {show ? \"Hide\" : \"Show\"}\r\n//                 </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//       </FormControl>\r\n//       <FormControl id=\"Password\" isRequired>\r\n//         <FormLabel>Confirm Password</FormLabel>\r\n//         <InputGroup size=\"md\">\r\n//           <Input\r\n//             type={show? \"text\" : \"password\"}\r\n//             placeholder=\"Confirm Password\"\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//           <InputRightElement width='4.5rem'>\r\n//             <Button h='1.75rem' size='sm' onClick={handleClick}>\r\n//                 {show ? \"Hide\" : \"Show\"}\r\n//                 </Button>\r\n//           </InputRightElement>\r\n//         </InputGroup>\r\n//       </FormControl>\r\n//       <FormControl id=\"Pic\" >\r\n//         <FormLabel>Upload Your Picture</FormLabel>\r\n//         <input \r\n//         type=\"file\"\r\n//         onPlay={1.5}\r\n//         accept='image/*'\r\n//         onChange={(e)=> postDetails(e.target.files[0])}\r\n//         />\r\n//       </FormControl>\r\n      \r\n//       <Button\r\n//       colorScheme='blue'\r\n//       width='100%'\r\n//       style={{marginTop: 15 }}\r\n//       onClick={submitHandler}\r\n//       isLoading={loading}\r\n//       >\r\n//         Sign Up\r\n//       </Button>\r\n//     </VStack>\r\n//   );\r\n// };\r\n\r\n// export default Signup\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}